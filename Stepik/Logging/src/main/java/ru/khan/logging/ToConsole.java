package ru.khan.logging;
import java.util.logging.*;

public class ToConsole {
    static String message = "сообщение про сообщение в консоли";

    public static void main() {
        // вывод сообщений в консоль
        // можно указать на ошибку без всякого логера
        System.out.println("————————————————————————————————————— вывод в консоль через print");
        System.err.println("Сообщение об ошибке в консоли, без логера");
        System.out.println("————————————————————————————————————— вывод логером в консоль");
        // использование логера из java.util
        Logger logger = Logger.getLogger("Вывод сообщений в консоль"); // сюда можно было передать и имя класса
        /*
        если здесь указать Level.OFF - не будут выводиться вообще никакие сообщения
        если Level.ALL - то все… (но они почему-то в консоль не выводятся)
        если Level.FINEST - то до уровня логирования finest, включительно. (аналогично с другими)
        вообще уровни идут так:
            severe
            warning
            info
            config
            fine
            finer
            finest
        и установка уровня логирования через setlevel до info включительно - работает
        по умолчанию кстати, включено info
         */

        logger.info("Информационное сообщение : "+message); // сообщение по уровню логирования info
        logger.severe("сообщение по уровню \"Строго\""); // сообщение по уровню "Строго"
        logger.warning("сообщение по уровню \"Внимание\""); // сообщение по уровню "Внимание"
        // остальные просто так не выводятся в консоль. Нуужна предварительная настройка
        // (либо в файле, с указанием пути к нему через .config.File - специальный конфигурационный файл, либо еще как-то)

        logger.config("Сообщение о конфигурации");
        logger.fine("Fine"); // сравнительные степени «все сногисшибательно»
        logger.finer("finner");
        logger.finest("finest");
        

    }
}
